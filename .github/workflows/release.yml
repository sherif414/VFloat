name: Release

on:
  push:
    branches:
      - main
  # Manual release trigger
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
          - auto
      dry_run:
        description: "Dry run (test release without publishing)"
        required: false
        default: false
        type: boolean

jobs:
  release:
    name: Release Package
    runs-on: ubuntu-latest

    # Only run if commit message doesn't contain skip flags
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'push' &&
       !contains(github.event.head_commit.message, '[skip ci]') &&
       !contains(github.event.head_commit.message, '[ci skip]') &&
       !contains(github.event.head_commit.message, 'chore: release'))

    permissions:
      contents: write
      packages: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Run type checking
        run: npm run type-check

      - name: Build package
        run: npm run build

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Manual dispatch
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ github.event.inputs.dry_run }}" == "true" ]]; then
              if [[ "${{ github.event.inputs.release_type }}" == "auto" ]]; then
                npm run release:dry
              else
                npm run release:${{ github.event.inputs.release_type }} -- --dry-run
              fi
            else
              if [[ "${{ github.event.inputs.release_type }}" == "auto" ]]; then
                npm run release -- --ci
              else
                npm run release:${{ github.event.inputs.release_type }} -- --ci
              fi
            fi
          # Automatic push to main
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            echo "Checking commits since last tag for release type..."
            LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
            if [[ -n "$LAST_TAG" ]]; then RANGE="$LAST_TAG..HEAD"; else RANGE=""; fi

            if git log --format=%B $RANGE | grep -E "BREAKING CHANGE|!:" > /dev/null; then
              RELEASE_TYPE=major
            elif git log --format=%s $RANGE | grep -E "^feat(\(.+\))?: " > /dev/null; then
              RELEASE_TYPE=minor
            elif git log --format=%s $RANGE | grep -E "^(fix|perf)(\(.+\))?: " > /dev/null; then
              RELEASE_TYPE=patch
            else
              echo "No releasable changes found, skipping release."
              exit 0
            fi

            echo "Detected release type: $RELEASE_TYPE"
            npm run release:$RELEASE_TYPE -- --ci
          fi

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            CHANGELOG.md
          retention-days: 30

  # Notify on failure
  notify-failure:
    name: Notify Release Failure
    runs-on: ubuntu-latest
    needs: release
    if: failure()
    permissions:
      issues: write

    steps:
      - name: Create issue on failure
        uses: actions/github-script@v7
        with:
          script: |
            const title = `Release workflow failed for ${context.sha.substring(0, 7)}`;
            const body = `The release workflow failed for commit ${context.sha}.

            **Workflow run:** ${context.payload.repository.html_url}/actions/runs/${context.runId}
            **Commit:** ${context.payload.repository.html_url}/commit/${context.sha}

            Please investigate and fix the issue.`;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['bug', 'ci/cd']
            });